-- 2. Sample Data Insertion üìä
-- ---
USE SocialMediaPlatform;
-- Users
INSERT INTO Users (username, email, password_hash, date_of_birth, profile_picture_url, bio) VALUES
('anna_dev', 'anna@example.com', 'hash_anna', '1998-05-20', 'https://example.com/anna.jpg', 'Software developer and AI enthusiast.'),
('brian_traveler', 'brian@example.com', 'hash_brian', '1992-11-10', 'https://example.com/brian.jpg', 'Exploring the world and sharing my adventures.'),
('clara_chef', 'clara@example.com', 'hash_clara', '1995-02-15', NULL, 'Food lover and recipe creator.'),
('dave_gamer', 'dave@example.com', 'hash_dave', '2000-08-01', 'https://example.com/dave.jpg', 'Professional gamer and streamer.');

-- Posts (assuming user_ids are 1, 2, 3, 4 for Anna, Brian, Clara, Dave respectively)
INSERT INTO Posts (user_id, post_text, media_url) VALUES
(1, 'New blog post about Python! #programming #python', NULL),
(2, 'Incredible sunset at the beach. #travel #nature', 'https://example.com/beach.jpg'),
(1, 'Working on an exciting project. More details soon! #webdevelopment', NULL),
(3, 'Recipe of the day: Creamy mushroom pasta. üçù #cooking #recipes', 'https://example.com/pasta.jpg');
SET @anna_post1_id = 1; SET @brian_post1_id = 2; SET @anna_post2_id = 3; SET @clara_post1_id = 4;

-- Comments
INSERT INTO Comments (post_id, user_id, comment_text) VALUES
(@anna_post1_id, 2, 'Excellent article, Anna! Very useful.'),
(@anna_post1_id, 3, 'Loved it, I''m going to check it out.'),
(@brian_post1_id, 1, 'What a spectacular photo, Brian!'),
(@clara_post1_id, 4, 'Looks delicious, Clara. Thanks for the recipe!');

-- Likes
INSERT INTO Likes (post_id, user_id) VALUES
(@anna_post1_id, 2), (@anna_post1_id, 3), (@anna_post1_id, 4),
(@brian_post1_id, 1), (@brian_post1_id, 3),
(@clara_post1_id, 1), (@clara_post1_id, 2), (@clara_post1_id, 4);

-- Follows
INSERT INTO Follows (follower_id, following_id) VALUES
(1, 2), (1, 3), -- Anna follows Brian and Clara
(2, 1), -- Brian follows Anna
(3, 1), (3, 2), (3, 4), -- Clara follows Anna, Brian, and Dave
(4, 1); -- Dave follows Anna

-- Messages
INSERT INTO Messages (sender_id, receiver_id, message_text) VALUES
(1, 2, 'Hey Brian! How are you? Saw your beach photos, incredible!'),
(2, 1, 'Hi Anna! All good, thanks. Glad you liked them.'),
(3, 4, 'Dave, how about we organize a game soon?');

-- Notifications (Usually generated by triggers or application logic)
INSERT INTO Notifications (user_id, actor_id, post_id, notification_type, notification_text, target_url) VALUES
(1, 2, @anna_post1_id, 'like', 'Brian Traveler liked your post.', CONCAT('/posts/', @anna_post1_id)),
(2, 1, @brian_post1_id, 'comment', 'Anna Dev commented on your post.', CONCAT('/posts/', @brian_post1_id)),
(2, 1, NULL, 'follow', 'Anna Dev started following you.', '/profile/1');
SET @msg_id_brian_to_anna = 2; -- Assuming message_id for Brian's message to Anna is 2
INSERT INTO Notifications (user_id, actor_id, message_id, notification_type, notification_text, target_url) VALUES
(1, 2, @msg_id_brian_to_anna, 'message', 'You have a new message from Brian Traveler.', CONCAT('/messages/thread/', 2));

-- Manually update counters for sample data (ideally handled by triggers)
UPDATE Users u SET post_count = (SELECT COUNT(*) FROM Posts p WHERE p.user_id = u.user_id);
UPDATE Users u SET follower_count = (SELECT COUNT(*) FROM Follows f WHERE f.following_id = u.user_id);
UPDATE Users u SET following_count = (SELECT COUNT(*) FROM Follows f WHERE f.follower_id = u.user_id);
UPDATE Posts p SET like_count = (SELECT COUNT(*) FROM Likes l WHERE l.post_id = p.post_id);
UPDATE Posts p SET comment_count = (SELECT COUNT(*) FROM Comments c WHERE c.post_id = p.post_id);
